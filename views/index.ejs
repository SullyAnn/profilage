<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Puppeteer Project</title>
</head>
<body>
    <h1> PROFILAGE</h1>
    <div>
        <p> Définissez le nom de votre fichier de profilage </p>
        <input type="text" id="filename" placeholder="Entrez le nom du fichier (sans l'extension .json)">
    </div>
    <main>
        <div class="main-block">
            <div class="visible-block">
                <div class="text-block">
                    <h2 id="main-btn">Image</h2>
                    <p> Pour profiler une image, déposez-la dans le dossier 'images' du projet Puppeteer. 
                        Ensuite, renseignez ici son nom et son extension
                    </p>
                </div>
                <button class="add-btn" onclick="addElement(this)"> Ajouter </button>
            </div>
        </div>

        <div class="main-block">
            <div class="visible-block">
                <div class="text-block">
                    <h2 id="main-btn">Html</h2>
                    <p> Pour profiler un élément HTML, inscrivez directement 
                        son code dans l'espace prévu ci-dessous.
                    </p>
                </div>
                <button class="add-btn"  data-for="html" onclick="addElementCode(this)"> Ajouter </button>
            </div>
        </div>

        <div class="main-block">
            <div class="visible-block">
                <div class="text-block">
                    <h2 id="main-btn">javascript</h2>
                    <p>Pour profiler un script Javascript,
                        saisissez le code correspondant dans la section dédiée ci-dessous.
                    </p>
                </div>
                <button class="add-btn"  data-for="javascript" onclick="addElementCode(this)"> Ajouter </button>
            </div>
        </div>

        <div class="main-block">
            <div class="visible-block">
                <div class="text-block">
                    <h2 id="main-btn">CSS</h2>
                    <p> Pour profiler un script CSS, 
                        saisissez le code correspondant dans la section dédiée ci-dessous.
                    </p>
                </div>
                <button class="add-btn"  data-for="css" onclick="addElementCode(this)"> Ajouter </button>
            </div>
        </div>

</main>
<button class="save-btn" onclick="SaveDataAllTypes()">Exécuter Puppeteer</button>


    <script>

        function SaveDataAllTypes() {
            const imageValueEl = document.getElementById('imageValue');
            const imageValue = imageValueEl && imageValueEl.value || null;
            const codeAreas = document.querySelectorAll('.code-area');
            const filename = document.getElementById('filename').value;

            let codes = { html: '', css: '', javascript: '' };

            codeAreas.forEach(area => {
            const type = area.getAttribute('data-type');
            codes[type] += area.value;
            });


            if (Object.values(codes).every(value => value === '') && imageValue === null) {
                alert('Tous les champs sont vides. Veuillez remplir au moins un champ.');
            } else if (!filename){
                alert('Renseignez un nom de fichier.');
            } 
            else {
                fetch('/run-SaveDataAllTypes', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ 
                        html: codes.html,
                        javascript: codes.javascript,
                        css : codes.css,
                        image: imageValue,
                        filename: filename })
                })
                .then(response => response.text())
                .then(data => {
                    console.log(data);
                    return fetch('/run-puppeteer', { method: 'GET' });
                })
                .then(response => response.text())
                .then(data => {
                    alert(data);
                })
                .catch(error => {
                    console.error("Erreur lors de l'exécution de Puppeteer:", error);
                });
                
                clear()
            }
        }

    function addElement(button) {
    // Récupérez le conteneur du bouton actuellement cliqué
    const container = button.parentElement;

    // Créez un nouvel élément div
    let newDiv = document.createElement("div");
    newDiv.classList.add("hidden");

    // Ajoutez l'input et le bouton à l'intérieur
    newDiv.innerHTML = `
        <input type="text" id="imageValue" placeholder="nomDeFichier.extension"><br>
        <button class="delete-btn" onclick="deleteElement(this)">Delete</button>
    `;

    // Insérez le nouvel élément après le conteneur du bouton
    container.parentNode.insertBefore(newDiv, container.nextSibling);
}

function addElementCode(button) {
    const container = button.parentElement;
    const type = button.getAttribute('data-for');

    // Créez un nouvel élément div
    let newDiv = document.createElement("div");
    newDiv.classList.add("hidden");
    newDiv.classList.add("column");

    // Ajoutez l'input et le bouton à l'intérieur
    newDiv.innerHTML = `
        <div>
            <label for="codeArea">Entrez votre code :</label>
            <textarea class="code-area"  data-type="${type}" name="code"></textarea>
        </div>
        <button class="delete-btn" onclick="deleteElement(this)">Delete</button>
    `;

    // Insérez le nouvel élément après le conteneur du bouton
    container.parentNode.insertBefore(newDiv, container.nextSibling);
}

function deleteElement(buttonElement) {
    // Trouvez l'élément parent (div) du bouton et supprimez-le
    let parentDiv = buttonElement.parentElement;
    parentDiv.remove();
}

function clear(){
    const inputs = document.querySelectorAll('input'); // Vous pouvez ajuster le sélecteur pour cibler des inputs spécifiques ou d'autres éléments.
    inputs.forEach(input => {
        input.value = '';
    });

    const textArea = document.querySelectorAll('textarea'); // Vous pouvez ajuster le sélecteur pour cibler des inputs spécifiques ou d'autres éléments.
    textArea.forEach(textArea => {
        textArea.value = '';
    });
}



    </script>

    <style>
        html{
            font-family: 'Roboto';
            background-color: #eef8ff;

        }
        body{
            margin-inline: 50px;
            display: flex;
            flex-direction: column;
            height: 100%;
            align-items: center;
            gap: 20px;
        }
        main{
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
            justify-content: center;
            width: 70%;
        }
        p{
            color: #868692;
        }
        input{
            border: 1px solid #868699;
            padding: 5px 10px;
            border-radius: 20px;
            width: 100%;
        }
        .main-block{
            display: flex;
            flex-direction: column;
            border-radius: 20px;
            background-color: white;
            width: 350px;
            padding: 20px;
            box-shadow: #cbd9e0 2px 2px 4px;
            height: fit-content;
        }
        .visible-block{
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin: 0px 0px 20px 0px;
        }
        .text-block{
        width: 100%;
        }
        #main-btn{
         font-size: 18px;
        }
        .hidden{
            display: flex;
            justify-content: space-between;
            gap: 5px;
            margin-bottom: 10px;
        }
        .add-btn{
            align-self: flex-end;
            border: none;
            background-color: #3e54b5;
            color: white;
            border-radius: 20px;
            height: fit-content;
            width: fit-content;
            padding: 10px 20px;
            font-size: 14px;
        }
        .delete-btn{
            align-self: flex-end;
            border: none;
            background-color: #b53e3e;
            color: white;
            border-radius: 20px;
            height: fit-content;
            width: fit-content;
            padding: 10px 20px;
            font-size: 14px;
        }
        .code-area{
            width: 350px;
            height: 200px;
        }
        .column{
            flex-direction: column;
        }
        .save-btn{
            width: fit-content;
            padding: 10px 20px;
            border: none;
            border-radius: 20px;
            color: white;
            font-weight: 700;
            background-color: #3eb58b;
        }
    </style>
</body>
</html>
